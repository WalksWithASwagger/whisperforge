version: '3.8'

services:
  auth:
    build:
      context: .
      dockerfile: services/auth/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/whisperforge
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - whisperforge-net
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=whisperforge
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - whisperforge-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  frontend:
    build:
      context: .
      dockerfile: services/frontend/Dockerfile
    env_file:
      - .env
    ports:
      - "8501:8501"
    networks:
      - whisperforge-net
    depends_on:
      transcription:
        condition: service_healthy
      processing:
        condition: service_healthy
    volumes:
      - frontend_cache:/app/cache

  transcription:
    build:
      context: .
      dockerfile: services/transcription/Dockerfile
    env_file:
      - .env
    networks:
      - whisperforge-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    volumes:
      - audio_cache:/app/cache

  processing:
    build:
      context: .
      dockerfile: services/processing/Dockerfile
    env_file:
      - .env
    networks:
      - whisperforge-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 15s
    volumes:
      - processing_cache:/app/cache

networks:
  whisperforge-net:
    driver: bridge

volumes:
  frontend_cache:
  audio_cache:
  processing_cache:
  storage_cache:
  postgres_data: